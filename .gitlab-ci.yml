image:
  name: maven:3.9-eclipse-temurin-17

variables:
  MAVEN_OPTS: "-Xmx1536m"

stages:
  # build includes tests
  - build
  - dependencies
  - deploy
  - analyze
  - init

maven-build:
  stage: build
  environment: staging
  script:
    - "mvn spotless:check"
    - "mvn -U clean package"
  artifacts:
    when: always
    paths:
      - "**/target/surefire-reports/TEST-*.xml"
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"
  rules:
  - if: $CHECK_DEPENDENCIES
    when: never
  - if: $CI_PIPELINE_SOURCE == 'api'
    when: never
  - when: on_success
  tags:
    - docker
  services:
    - name: postgres:14
      alias: postgresql
  variables:
    POSTGRES_USER: igloo_test
    POSTGRES_PASSWORD: igloo_test
    TEST_DB_USER: igloo_test
    TEST_DB_PASSWORD: igloo_test
    TEST_DB_SCHEMA: public
    TEST_DB_NAME: igloo_test
    TEST_DB_TYPE: postgresql
    TEST_DB_HOST: postgresql
    TEST_DB_PORT: 5432

maven-dependencies:
  stage: dependencies
  environment: staging
  script:
    - "source gitlab-ci.build.conf"
    - "./ci/maven-dependencies.sh"
  rules:
  - if: $CHECK_DEPENDENCIES
  - if: $CI_PIPELINE_SOURCE == 'api'
    when: never
  tags:
    - docker

# test project initialisation from basic-app
# Generate project named basic-application
# Diff with basic-application to check
# Build new project
# Not done: test are not launched
# Need to launched after deploy as igloo artifacts are needed.
test-init:
  stage: init
  needs: ['maven-deploy']
  script:
  - apt-get update
  # add hatch and xmllint
  - apt-get install -y python3 pipx libxml2-utils
  - pipx install hatch
  - cd tools/igloo-project-init
  - /root/.local/bin/hatch fmt
  - /root/.local/bin/hatch run types:check
  # check forbidden logger name in log4j2 properties
  - grep -qEr '.*basicapp.*=' --include log4j2*properties --exclude-dir target && { echo "Do not use basicapp in logger name (incompatible with project init)"; exit 1; }
  - >
    /root/.local/bin/hatch run igloo-project-init
    -v --debug --check-diff --check-build
    --igloo-url "$CI_PROJECT_DIR"
    basic-application org.iglooproject.archetype CURRENT_IGLOO_VERSION basicapp
    BasicApplication basicApplication "Basic Application" basic_application
  rules:
  - if: $CHECK_DEPENDENCIES
    when: never
  - if: $CI_PIPELINE_SOURCE == 'api'
    when: never
  - if: $CI_COMMIT_BRANCH == "dev"
  - if: $CI_COMMIT_BRANCH == "master"
  - if: $CI_COMMIT_BRANCH == "main"
  - if: $CI_COMMIT_BRANCH == "igloo-boot"
  - if: $CI_COMMIT_BRANCH == "igloo-boot-dev"
  tags:
  - docker

basic-application-init:
  stage: build
  script:
  - apt-get update
  # add hatch and xmllint
  - apt-get install -y python3 pipx libxml2-utils
  - pipx install hatch
  - cd tools/igloo-project-init
  - export GIT_USER="token"
  - export GIT_PASSWORD="$GIT_ACCESS_TOKEN"
  - '[ "$DRY_RUN" == "true" ] && DRY_RUN_ARGS=--dry-run || DRY_RUN_ARGS=""'
  - >
    /root/.local/bin/hatch run igloo-project-init
    -v --debug --check-build
    --igloo-url "$CI_PROJECT_DIR" $DRY_RUN_ARGS
    --target-url "$GIT_HTTPS_REPO_PROJECT" --target-branch ${TARGET_BRANCH:-main}
    --target-username kobalt-admin --target-email infra@kobalt.fr
    "$ARTIFACT_ID" "$GROUP_ID" "$VERSION" "$PACKAGE"
    "$ARCHETYPE_APPLICATION_NAME_PREFIX" "$ARCHETYPE_SPRING_ANNOTATION_VALUE_PREFIX" "$ARCHETYPE_FULL_APPLICTION_NAME" "$ARCHETYPE_DATABASE_PREFIX"
  rules:
  - if: $CI_PIPELINE_SOURCE == 'api'
  tags:
    - docker

maven-deploy:
  stage: deploy
  environment: staging
  script:
    - "mvn -U deploy -DperformRelease -Ddistribution=igloo-release -DskipTests"
  rules:
  - if: $CI_PIPELINE_SOURCE == 'api'
    when: never
  - if: $CHECK_DEPENDENCIES
    when: never
  - if: $CI_COMMIT_BRANCH == "main"
  - if: $CI_COMMIT_BRANCH == "master"
  - if: $CI_COMMIT_BRANCH == "dev"
  - if: $CI_COMMIT_BRANCH == "igloo-boot"
  - if: $CI_COMMIT_BRANCH == "igloo-boot-dev"
  - if: $CI_COMMIT_BRANCH == /^ft-.*-deploy$/
  - if: $CI_COMMIT_BRANCH == /^hf-.*$/
  - if: $CI_COMMIT_BRANCH == /^igloo-boot-hf-.*$/
  tags:
    - docker

sonar-analyze:
  needs: []
  stage: analyze
  environment: staging
  script:
    - mvn -U verify sonar:sonar
      -Dsonar.projectBranch=igloo-boot
      -DskipTests
      -Dsonar.host.url="https://sonar.tools.kobalt.fr"
  rules:
  - if: $CI_PIPELINE_SOURCE == 'api'
    when: never
  - if: $CHECK_DEPENDENCIES
    when: never
  - when: on_success
  tags:
    - docker
